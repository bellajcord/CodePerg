{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport ActionDelete from '@material-ui/icons/Delete';\nimport classnames from 'classnames';\nimport { useDelete, useRefresh, useNotify, useRedirect, CRUD_DELETE } from 'ra-core';\nimport Button from './Button';\n\nvar DeleteWithUndoButton = function (props) {\n  var _a = props.label,\n      label = _a === void 0 ? 'ra.action.delete' : _a,\n      classesOverride = props.classes,\n      className = props.className,\n      _b = props.icon,\n      icon = _b === void 0 ? defaultIcon : _b,\n      onClick = props.onClick,\n      resource = props.resource,\n      record = props.record,\n      basePath = props.basePath,\n      _c = props.redirect,\n      redirectTo = _c === void 0 ? 'list' : _c,\n      rest = __rest(props, [\"label\", \"classes\", \"className\", \"icon\", \"onClick\", \"resource\", \"record\", \"basePath\", \"redirect\"]);\n\n  var classes = useStyles(props);\n  var notify = useNotify();\n  var redirect = useRedirect();\n  var refresh = useRefresh();\n\n  var _d = useDelete(resource, record && record.id, record, {\n    action: CRUD_DELETE,\n    onSuccess: function () {\n      notify('ra.notification.deleted', 'info', {\n        smart_count: 1\n      }, true);\n      redirect(redirectTo, basePath);\n      refresh();\n    },\n    onFailure: function (error) {\n      return notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', 'warning');\n    },\n    undoable: true\n  }),\n      deleteOne = _d[0],\n      loading = _d[1].loading;\n\n  var handleDelete = useCallback(function (event) {\n    event.stopPropagation();\n    deleteOne();\n\n    if (typeof onClick === 'function') {\n      onClick(event);\n    }\n  }, [deleteOne, onClick]);\n  return React.createElement(Button, __assign({\n    onClick: handleDelete,\n    disabled: loading,\n    label: label,\n    className: classnames('ra-delete-button', classes.deleteButton, className),\n    key: \"button\"\n  }, sanitizeRestProps(rest)), icon);\n};\n\nexport var sanitizeRestProps = function (_a) {\n  var classes = _a.classes,\n      handleSubmit = _a.handleSubmit,\n      handleSubmitWithRedirect = _a.handleSubmitWithRedirect,\n      invalid = _a.invalid,\n      label = _a.label,\n      pristine = _a.pristine,\n      resource = _a.resource,\n      saving = _a.saving,\n      undoable = _a.undoable,\n      redirect = _a.redirect,\n      submitOnEnter = _a.submitOnEnter,\n      rest = __rest(_a, [\"classes\", \"handleSubmit\", \"handleSubmitWithRedirect\", \"invalid\", \"label\", \"pristine\", \"resource\", \"saving\", \"undoable\", \"redirect\", \"submitOnEnter\"]);\n\n  return rest;\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    deleteButton: {\n      color: theme.palette.error.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.error.main, 0.12),\n        // Reset on mouse devices\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  };\n}, {\n  name: 'RaDeleteWithUndoButton'\n});\nvar defaultIcon = React.createElement(ActionDelete, null);\nDeleteWithUndoButton.propTypes = {\n  basePath: PropTypes.string,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  label: PropTypes.string,\n  record: PropTypes.any,\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  resource: PropTypes.string,\n  icon: PropTypes.element\n};\nexport default DeleteWithUndoButton;","map":null,"metadata":{},"sourceType":"module"}