{"ast":null,"code":"var __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nexport var GET_LIST = 'GET_LIST';\nexport var GET_ONE = 'GET_ONE';\nexport var GET_MANY = 'GET_MANY';\nexport var GET_MANY_REFERENCE = 'GET_MANY_REFERENCE';\nexport var CREATE = 'CREATE';\nexport var UPDATE = 'UPDATE';\nexport var UPDATE_MANY = 'UPDATE_MANY';\nexport var DELETE = 'DELETE';\nexport var DELETE_MANY = 'DELETE_MANY';\nexport var fetchActionsWithRecordResponse = [GET_ONE, CREATE, UPDATE];\nexport var fetchActionsWithArrayOfIdentifiedRecordsResponse = [GET_LIST, GET_MANY, GET_MANY_REFERENCE];\nexport var fetchActionsWithArrayOfRecordsResponse = __spreadArrays(fetchActionsWithArrayOfIdentifiedRecordsResponse, [UPDATE_MANY, DELETE_MANY]);\nexport var fetchActionsWithTotalResponse = [GET_LIST, GET_MANY_REFERENCE];\nexport var sanitizeFetchType = function (fetchType) {\n  switch (fetchType) {\n    case GET_LIST:\n      return 'getList';\n\n    case GET_ONE:\n      return 'getOne';\n\n    case GET_MANY:\n      return 'getMany';\n\n    case GET_MANY_REFERENCE:\n      return 'getManyReference';\n\n    case CREATE:\n      return 'create';\n\n    case UPDATE:\n      return 'update';\n\n    case UPDATE_MANY:\n      return 'updateMany';\n\n    case DELETE:\n      return 'delete';\n\n    case DELETE_MANY:\n      return 'deleteMany';\n\n    default:\n      return fetchType;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}