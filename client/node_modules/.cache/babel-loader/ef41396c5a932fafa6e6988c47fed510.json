{"ast":null,"code":"import _objectSpread from \"/Users/bellacord/ga-sei/Project3/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/bellacord/ga-sei/Project3/client/src/components/Language/Javascript/js-list-component.jsx\";\n// all videos listed and add-to button\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass JavaScripts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      jsvideos: [],\n      newVideo: {\n        name: '',\n        description: ''\n      },\n      isVideoFormDisplayed: false\n    };\n\n    this.componentDidMount = () => {\n      axios.get('/api/JavaScript').then(res => {\n        this.setState({\n          videos: res.data\n        });\n      });\n    };\n\n    this.toggleVideoForm = () => {\n      this.setState((state, props) => {\n        return {\n          isVideoFormDisplayed: !state.isVideoFormDisplayed\n        };\n      });\n    };\n\n    this.handleChange = e => {\n      const cloneNewVideo = _objectSpread({}, this.state.newVideo);\n\n      cloneNewVideo[e.target.name] = e.target.value;\n      this.setState({\n        newVideo: cloneNewVideo\n      });\n    };\n\n    this.createVideo = e => {\n      e.preventDefault();\n      axios.post('/api/JavaScript', {\n        name: this.state.newVideo.name,\n        description: this.state.newVideo.description\n      }).then(res => {\n        const videosList = [...this.state.videos];\n        videosList.unshift(res.data);\n        this.setState({\n          newVideo: {\n            name: '',\n            description: ''\n          },\n          isVideoFormDisplayed: false,\n          videos: videosList\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"JavaScript Videos\"), this.state.videos.map(video => {\n      return React.createElement(\"div\", {\n        key: video._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\".concat(video._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, video.name));\n    }), React.createElement(\"button\", {\n      onClick: this.toggleVideoForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" New Video\"), this.state.isVideoFormDisplayed ? React.createElement(\"form\", {\n      onSubmit: this.createVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      id: \"name\",\n      type: \"text\",\n      name: \"name\",\n      onChange: this.handleChange,\n      value: this.state.newCreature.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      id: \"description\",\n      type: \"text\",\n      name: \"description\",\n      onChange: this.handleChange,\n      value: this.state.newCreature.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Create\")) : null);\n  }\n\n}\n\nexport default JavaScripts;","map":{"version":3,"sources":["/Users/bellacord/ga-sei/Project3/client/src/components/Language/Javascript/js-list-component.jsx"],"names":["axios","React","Component","Link","JavaScripts","state","jsvideos","newVideo","name","description","isVideoFormDisplayed","componentDidMount","get","then","res","setState","videos","data","toggleVideoForm","props","handleChange","e","cloneNewVideo","target","value","createVideo","preventDefault","post","videosList","unshift","render","map","video","_id","newCreature"],"mappings":"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","sourcesContent":["// all videos listed and add-to button\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nclass JavaScripts extends Component {\n    state = {\n        jsvideos: [],\n        newVideo: {\n            name: '',\n            description: ''\n        },\n        isVideoFormDisplayed: false\n    }\n  \n    componentDidMount = () => {\n      axios.get('/api/JavaScript').then(res => {\n          this.setState({videos: res.data})\n      })\n    }\n  \n    toggleVideoForm = () => {\n        this.setState((state, props) => {\n            return ({isVideoFormDisplayed: !state.isVideoFormDisplayed})\n        })\n    }\n  \n    handleChange = (e) => {\n      const cloneNewVideo = {...this.state.newVideo}\n      cloneNewVideo[e.target.name] = e.target.value\n      this.setState({newVideo: cloneNewVideo})\n    }\n  \n    createVideo = (e) => {\n      e.preventDefault()\n      axios\n          .post('/api/JavaScript', {\n              name: this.state.newVideo.name,\n              description: this.state.newVideo.description\n          })\n          .then(res => {\n              const videosList = [...this.state.videos]\n              videosList.unshift(res.data)\n              this.setState({\n                  newVideo: {\n                      name: '',\n                      description: ''\n                  },\n                  isVideoFormDisplayed: false,\n                  videos: videosList\n              })\n          })\n  \n    }\n  \n    render() {\n      return (\n        <div>\n          <h1>JavaScript Videos</h1>\n          {\n              this.state.videos.map(video => {\n                  return (\n                      <div key={video._id}>\n                          <Link\n                              to={`/${video._id}`}\n                          >\n                              {video.name}\n                          </Link>\n                      </div>\n                  )\n              })\n          }\n          <button onClick={this.toggleVideoForm}> New Video</button>\n          {\n              this.state.isVideoFormDisplayed\n                  ? <form onSubmit={this.createVideo}>\n                      <div>\n                          <label htmlFor=\"name\">Name</label>\n                          <input\n                              id=\"name\"\n                              type=\"text\"\n                              name=\"name\"\n                              onChange={this.handleChange}\n                              value={this.state.newCreature.name}\n                          />\n                      </div>\n                      <div>\n                          <label htmlFor=\"description\">Description</label>\n                          <textarea\n                              id=\"description\"\n                              type=\"text\"\n                              name=\"description\"\n                              onChange={this.handleChange}\n                              value={this.state.newCreature.description}\n                          />\n                      </div>\n                      <button>Create</button>\n                  </form>\n                  : null\n          }\n        </div>\n      )\n    }\n  }\n  \n  export default JavaScripts"]},"metadata":{},"sourceType":"module"}