{"ast":null,"code":"import _objectSpread from \"/Users/bellacord/ga-sei/Project3/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/bellacord/ga-sei/Project3/client/src/components/Language/Javascript/js-list-component.jsx\";\n// all videos listed and add-to button\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Ja extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      creatures: [],\n      newCreature: {\n        name: '',\n        description: ''\n      },\n      isCreatureFormDisplayed: false\n    };\n\n    this.componentDidMount = () => {\n      axios.get('/api/v1').then(res => {\n        this.setState({\n          creatures: res.data\n        });\n      });\n    };\n\n    this.toggleCreatureForm = () => {\n      this.setState((state, props) => {\n        return {\n          isCreatureFormDisplayed: !state.isCreatureFormDisplayed\n        };\n      });\n    };\n\n    this.handleChange = e => {\n      const cloneNewCreature = _objectSpread({}, this.state.newCreature);\n\n      cloneNewCreature[e.target.name] = e.target.value;\n      this.setState({\n        newCreature: cloneNewCreature\n      });\n    };\n\n    this.createCreature = e => {\n      e.preventDefault();\n      axios.post('/api/v1', {\n        name: this.state.newCreature.name,\n        description: this.state.newCreature.description\n      }).then(res => {\n        const creaturesList = [...this.state.creatures];\n        creaturesList.unshift(res.data);\n        this.setState({\n          newCreature: {\n            name: '',\n            description: ''\n          },\n          isCreatureFormDisplayed: false,\n          creatures: creaturesList\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Creatures\"), this.state.creatures.map(creature => {\n      return React.createElement(\"div\", {\n        key: creature._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\".concat(creature._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, creature.name));\n    }), React.createElement(\"button\", {\n      onClick: this.toggleCreatureForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"+ New Creature\"), this.state.isCreatureFormDisplayed ? React.createElement(\"form\", {\n      onSubmit: this.createCreature,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      id: \"name\",\n      type: \"text\",\n      name: \"name\",\n      onChange: this.handleChange,\n      value: this.state.newCreature.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      id: \"description\",\n      type: \"text\",\n      name: \"description\",\n      onChange: this.handleChange,\n      value: this.state.newCreature.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Create\")) : null);\n  }\n\n}\n\nexport default Creatures;","map":{"version":3,"sources":["/Users/bellacord/ga-sei/Project3/client/src/components/Language/Javascript/js-list-component.jsx"],"names":["axios","React","Component","Link","Ja","state","creatures","newCreature","name","description","isCreatureFormDisplayed","componentDidMount","get","then","res","setState","data","toggleCreatureForm","props","handleChange","e","cloneNewCreature","target","value","createCreature","preventDefault","post","creaturesList","unshift","render","map","creature","_id","Creatures"],"mappings":"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","sourcesContent":["// all videos listed and add-to button\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nclass Ja extends Component {\n    state = {\n        creatures: [],\n        newCreature: {\n            name: '',\n            description: ''\n        },\n        isCreatureFormDisplayed: false\n    }\n  \n    componentDidMount = () => {\n      axios.get('/api/v1').then(res => {\n          this.setState({creatures: res.data})\n      })\n    }\n  \n    toggleCreatureForm = () => {\n        this.setState((state, props) => {\n            return ({isCreatureFormDisplayed: !state.isCreatureFormDisplayed})\n        })\n    }\n  \n    handleChange = (e) => {\n      const cloneNewCreature = {...this.state.newCreature}\n      cloneNewCreature[e.target.name] = e.target.value\n      this.setState({newCreature: cloneNewCreature})\n    }\n  \n    createCreature = (e) => {\n      e.preventDefault()\n      axios\n          .post('/api/v1', {\n              name: this.state.newCreature.name,\n              description: this.state.newCreature.description\n          })\n          .then(res => {\n              const creaturesList = [...this.state.creatures]\n              creaturesList.unshift(res.data)\n              this.setState({\n                  newCreature: {\n                      name: '',\n                      description: ''\n                  },\n                  isCreatureFormDisplayed: false,\n                  creatures: creaturesList\n              })\n          })\n  \n    }\n  \n    render() {\n      return (\n        <div>\n          <h1>Creatures</h1>\n          {\n              this.state.creatures.map(creature => {\n                  return (\n                      <div key={creature._id}>\n                          <Link\n                              to={`/${creature._id}`}\n                          >\n                              {creature.name}\n                          </Link>\n                      </div>\n                  )\n              })\n          }\n          <button onClick={this.toggleCreatureForm}>+ New Creature</button>\n          {\n              this.state.isCreatureFormDisplayed\n                  ? <form onSubmit={this.createCreature}>\n                      <div>\n                          <label htmlFor=\"name\">Name</label>\n                          <input\n                              id=\"name\"\n                              type=\"text\"\n                              name=\"name\"\n                              onChange={this.handleChange}\n                              value={this.state.newCreature.name}\n                          />\n                      </div>\n                      <div>\n                          <label htmlFor=\"description\">Description</label>\n                          <textarea\n                              id=\"description\"\n                              type=\"text\"\n                              name=\"description\"\n                              onChange={this.handleChange}\n                              value={this.state.newCreature.description}\n                          />\n                      </div>\n                      <button>Create</button>\n                  </form>\n                  : null\n          }\n        </div>\n      )\n    }\n  }\n  \n  export default Creatures"]},"metadata":{},"sourceType":"module"}