{"ast":null,"code":"import _objectSpread from \"/Users/bellacord/ga-sei/Project3/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/bellacord/ga-sei/Project3/client/src/components/Language/Javascript/js-list-component.jsx\";\n// all videos listed and add-to button\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass JavaScripts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      jsVideos: [],\n      newJsVideo: {\n        name: '',\n        description: ''\n      },\n      isVideoFormDisplayed: false\n    };\n\n    this.componentDidMount = () => {\n      axios.get('/api/JavaScript').then(res => {\n        this.setState({\n          jsVideos: res.data\n        });\n      });\n    };\n\n    this.toggleVideoForm = () => {\n      this.setState((state, props) => {\n        return {\n          isVideoFormDisplayed: !state.isVideoFormDisplayed\n        };\n      });\n    };\n\n    this.handleChange = e => {\n      const cloneNewVideo = _objectSpread({}, this.state.newJsVideo);\n\n      cloneNewVideo[e.target.name] = e.target.value;\n      this.setState({\n        newJsVideo: cloneNewVideo\n      });\n    };\n\n    this.createVideo = e => {\n      e.preventDefault();\n      axios.post('/api/JavaScript', {\n        name: this.state.newVideo.name,\n        description: this.state.newVideo.description\n      }).then(res => {\n        const videosList = [...this.state.videos];\n        videosList.unshift(res.data);\n        this.setState({\n          newJsVideo: {\n            name: '',\n            description: '',\n            link: ''\n          },\n          isVideoFormDisplayed: false,\n          jsVideos: videosList\n        });\n      });\n    };\n  }\n\n  render() {\n    const videoListElement = this.state.jsVideos.map((jsVideo, i));\n    return React.createElement(\"div\", {\n      className: \"video-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"JavaScript Videos\"), React.createElement(\"button\", {\n      onClick: this.toggleVideoForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" New Video\"));\n  }\n\n}\n\nexport default JavaScripts;","map":{"version":3,"sources":["/Users/bellacord/ga-sei/Project3/client/src/components/Language/Javascript/js-list-component.jsx"],"names":["axios","React","Component","Link","JavaScripts","state","jsVideos","newJsVideo","name","description","isVideoFormDisplayed","componentDidMount","get","then","res","setState","data","toggleVideoForm","props","handleChange","e","cloneNewVideo","target","value","createVideo","preventDefault","post","newVideo","videosList","videos","unshift","link","render","videoListElement","map","jsVideo","i"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCG,KADgC,GACxB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,UAAU,EAAE;AACRC,QAAAA,IAAI,EAAE,EADE;AAERC,QAAAA,WAAW,EAAE;AAFL,OAFR;AAMJC,MAAAA,oBAAoB,EAAE;AANlB,KADwB;;AAAA,SAUhCC,iBAVgC,GAUZ,MAAM;AACxBX,MAAAA,KAAK,CAACY,GAAN,CAAU,iBAAV,EAA6BC,IAA7B,CAAkCC,GAAG,IAAI;AACrC,aAAKC,QAAL,CAAc;AAACT,UAAAA,QAAQ,EAAEQ,GAAG,CAACE;AAAf,SAAd;AACH,OAFD;AAGD,KAd+B;;AAAA,SAgBhCC,eAhBgC,GAgBd,MAAM;AACpB,WAAKF,QAAL,CAAc,CAACV,KAAD,EAAQa,KAAR,KAAkB;AAC5B,eAAQ;AAACR,UAAAA,oBAAoB,EAAE,CAACL,KAAK,CAACK;AAA9B,SAAR;AACH,OAFD;AAGH,KApB+B;;AAAA,SAsBhCS,YAtBgC,GAsBhBC,CAAD,IAAO;AACpB,YAAMC,aAAa,qBAAO,KAAKhB,KAAL,CAAWE,UAAlB,CAAnB;;AACAc,MAAAA,aAAa,CAACD,CAAC,CAACE,MAAF,CAASd,IAAV,CAAb,GAA+BY,CAAC,CAACE,MAAF,CAASC,KAAxC;AACA,WAAKR,QAAL,CAAc;AAACR,QAAAA,UAAU,EAAEc;AAAb,OAAd;AACD,KA1B+B;;AAAA,SA4BhCG,WA5BgC,GA4BjBJ,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACK,cAAF;AACAzB,MAAAA,KAAK,CACA0B,IADL,CACU,iBADV,EAC6B;AACrBlB,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWsB,QAAX,CAAoBnB,IADL;AAErBC,QAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWsB,QAAX,CAAoBlB;AAFZ,OAD7B,EAKKI,IALL,CAKUC,GAAG,IAAI;AACT,cAAMc,UAAU,GAAG,CAAC,GAAG,KAAKvB,KAAL,CAAWwB,MAAf,CAAnB;AACAD,QAAAA,UAAU,CAACE,OAAX,CAAmBhB,GAAG,CAACE,IAAvB;AACA,aAAKD,QAAL,CAAc;AACVR,UAAAA,UAAU,EAAE;AACRC,YAAAA,IAAI,EAAE,EADE;AAERC,YAAAA,WAAW,EAAE,EAFL;AAGRsB,YAAAA,IAAI,EAAE;AAHE,WADF;AAMVrB,UAAAA,oBAAoB,EAAE,KANZ;AAOVJ,UAAAA,QAAQ,EAAEsB;AAPA,SAAd;AASH,OAjBL;AAmBD,KAjD+B;AAAA;;AAmDhCI,EAAAA,MAAM,GAAG;AACL,UAAMC,gBAAgB,GAAG,KAAK5B,KAAL,CAAWC,QAAX,CAAoB4B,GAApB,EAAyBC,OAAO,EAAEC,CAAlC,EAAzB;AACF,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKnB,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF;AAQD;;AA7D+B;;AAgElC,eAAeb,WAAf","sourcesContent":["// all videos listed and add-to button\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nclass JavaScripts extends Component {\n    state = {\n        jsVideos: [],\n        newJsVideo: {\n            name: '',\n            description: ''\n        },\n        isVideoFormDisplayed: false\n    }\n  \n    componentDidMount = () => {\n      axios.get('/api/JavaScript').then(res => {\n          this.setState({jsVideos: res.data})\n      })\n    }\n  \n    toggleVideoForm = () => {\n        this.setState((state, props) => {\n            return ({isVideoFormDisplayed: !state.isVideoFormDisplayed})\n        })\n    }\n  \n    handleChange = (e) => {\n      const cloneNewVideo = {...this.state.newJsVideo}\n      cloneNewVideo[e.target.name] = e.target.value\n      this.setState({newJsVideo: cloneNewVideo})\n    }\n  \n    createVideo = (e) => {\n      e.preventDefault()\n      axios\n          .post('/api/JavaScript', {\n              name: this.state.newVideo.name,\n              description: this.state.newVideo.description\n          })\n          .then(res => {\n              const videosList = [...this.state.videos]\n              videosList.unshift(res.data)\n              this.setState({\n                  newJsVideo: {\n                      name: '',\n                      description: '',\n                      link: '',\n                  },\n                  isVideoFormDisplayed: false,\n                  jsVideos: videosList\n              })\n          })\n  \n    }\n  \n    render() {\n        const videoListElement = this.state.jsVideos.map((jsVideo, i))\n      return (\n        <div className=\"video-container\" >\n          <h1>JavaScript Videos</h1>\n          \n          <button onClick={this.toggleVideoForm}> New Video</button>\n          \n        </div>\n      )\n    }\n  }\n  \n  export default JavaScripts"]},"metadata":{},"sourceType":"module"}