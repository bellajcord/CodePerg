{"ast":null,"code":"import { combineReducers } from 'redux';\nimport resources, { getResources as resourceGetResources, getReferenceResource as resourceGetReferenceResource } from './resource';\nimport loading from './loading';\nimport notifications from './notifications';\nimport references, { getPossibleReferenceValues as referencesGetPossibleReferenceValues } from './references';\nimport ui from './ui';\nimport customQueries from './customQueries';\n\nvar defaultReducer = function () {\n  return null;\n};\n\nexport default combineReducers({\n  /**\n   * ts-jest does some aggressive module mocking when unit testing reducers individually.\n   * To avoid 'No reducer provided for key \"...\"' warnings,\n   * we pass default reducers. Sorry for legibility.\n   *\n   * @see https://stackoverflow.com/questions/43375079/redux-warning-only-appearing-in-tests\n   */\n  resources: resources || defaultReducer,\n  customQueries: customQueries || defaultReducer,\n  loading: loading || defaultReducer,\n  notifications: notifications || defaultReducer,\n  references: references || defaultReducer,\n  ui: ui || defaultReducer\n});\nexport var getPossibleReferenceValues = function (state, props) {\n  return referencesGetPossibleReferenceValues(state.references, props);\n};\nexport var getResources = function (state) {\n  return resourceGetResources(state.resources);\n};\nexport var getReferenceResource = function (state, props) {\n  return resourceGetReferenceResource(state.resources, props);\n};\nexport { getPossibleReferences } from './references';","map":null,"metadata":{},"sourceType":"module"}