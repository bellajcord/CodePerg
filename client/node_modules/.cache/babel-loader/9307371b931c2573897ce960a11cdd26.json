{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { useInput, useTranslate, FieldTitle } from 'ra-core';\nimport sanitizeRestProps from './sanitizeRestProps';\nimport InputHelperText from './InputHelperText';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    input: {\n      width: theme.spacing(16)\n    }\n  };\n}, {\n  name: 'RaNullableBooleanInput'\n});\n\nvar getBooleanFromString = function (value) {\n  if (value === 'true') return true;\n  if (value === 'false') return false;\n  return null;\n};\n\nvar getStringFromBoolean = function (value) {\n  if (value === true) return 'true';\n  if (value === false) return 'false';\n  return '';\n};\n\nvar NullableBooleanInput = function (props) {\n  var className = props.className,\n      classesOverride = props.classes,\n      _a = props.format,\n      format = _a === void 0 ? getStringFromBoolean : _a,\n      helperText = props.helperText,\n      label = props.label,\n      _b = props.margin,\n      margin = _b === void 0 ? 'dense' : _b,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      options = props.options,\n      displayNull = props.displayNull,\n      _c = props.parse,\n      parse = _c === void 0 ? getBooleanFromString : _c,\n      resource = props.resource,\n      source = props.source,\n      validate = props.validate,\n      _d = props.variant,\n      variant = _d === void 0 ? 'filled' : _d,\n      rest = __rest(props, [\"className\", \"classes\", \"format\", \"helperText\", \"label\", \"margin\", \"onBlur\", \"onChange\", \"onFocus\", \"options\", \"displayNull\", \"parse\", \"resource\", \"source\", \"validate\", \"variant\"]);\n\n  var classes = useStyles(props);\n  var translate = useTranslate();\n\n  var _e = useInput({\n    format: format,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    parse: parse,\n    resource: resource,\n    source: source,\n    validate: validate\n  }),\n      id = _e.id,\n      input = _e.input,\n      isRequired = _e.isRequired,\n      _f = _e.meta,\n      error = _f.error,\n      touched = _f.touched;\n\n  var enhancedOptions = displayNull ? __assign(__assign({}, options), {\n    SelectProps: __assign({\n      displayEmpty: true\n    }, options && options.SelectProps),\n    InputLabelProps: __assign({\n      shrink: true\n    }, options && options.InputLabelProps)\n  }) : options;\n  return React.createElement(TextField, __assign({\n    id: id\n  }, input, {\n    select: true,\n    margin: margin,\n    label: React.createElement(FieldTitle, {\n      label: label,\n      source: source,\n      resource: resource,\n      isRequired: isRequired\n    }),\n    error: !!(touched && error),\n    helperText: React.createElement(InputHelperText, {\n      touched: touched,\n      error: error,\n      helperText: helperText\n    }),\n    className: classnames(classes.input, className),\n    variant: variant\n  }, enhancedOptions, sanitizeRestProps(rest)), React.createElement(MenuItem, {\n    value: \"\"\n  }, translate('ra.boolean.null')), React.createElement(MenuItem, {\n    value: \"false\"\n  }, translate('ra.boolean.false')), React.createElement(MenuItem, {\n    value: \"true\"\n  }, translate('ra.boolean.true')));\n};\n\nNullableBooleanInput.propTypes = {\n  label: PropTypes.string,\n  options: PropTypes.object,\n  resource: PropTypes.string,\n  source: PropTypes.string\n};\nexport default NullableBooleanInput;","map":null,"metadata":{},"sourceType":"module"}