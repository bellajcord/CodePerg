{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useState } from 'react';\nimport { useTranslate } from 'ra-core';\nimport { InputAdornment, IconButton } from '@material-ui/core';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport TextInput from './TextInput';\n\nvar PasswordInput = function (_a) {\n  var _b = _a.initiallyVisible,\n      initiallyVisible = _b === void 0 ? false : _b,\n      props = __rest(_a, [\"initiallyVisible\"]);\n\n  var _c = useState(initiallyVisible),\n      visible = _c[0],\n      setVisible = _c[1];\n\n  var translate = useTranslate();\n\n  var handleClick = function () {\n    setVisible(!visible);\n  };\n\n  return React.createElement(TextInput, __assign({}, props, {\n    type: visible ? 'text' : 'password',\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\"\n      }, React.createElement(IconButton, {\n        \"aria-label\": translate(visible ? 'ra.input.password.toggle_visible' : 'ra.input.password.toggle_hidden'),\n        onClick: handleClick\n      }, visible ? React.createElement(Visibility, null) : React.createElement(VisibilityOff, null)))\n    }\n  }));\n};\n\nexport default PasswordInput;","map":null,"metadata":{},"sourceType":"module"}