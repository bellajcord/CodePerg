{"ast":null,"code":"import _objectSpread from \"/Users/bellacord/ga-sei/Project3/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/bellacord/ga-sei/Project3/client/src/components/Language/Javascript/js-list-component.jsx\";\n// all videos listed and add-to button\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nexport default class JavaScripts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      video: {\n        name: \"\",\n        id: \"\",\n        description: \"\"\n      },\n      newVideo: {\n        name: \"\",\n        id: \"\",\n        description: \"\"\n      },\n      videoForm: false\n    };\n\n    this.updatePage = () => {\n      axios.get(\"/api/video\").then(res => {\n        this.setState({\n          video: res.data\n        });\n      });\n      axios.get(\"/api/video\").then(res => {\n        this.setState({\n          video: res.data\n        });\n      });\n    };\n\n    this.handleToggleNewForm = () => {\n      this.setState(state => {\n        return {\n          videoForm: !state.videoForm\n        };\n      });\n    };\n\n    this.handleNewFormChange = evt => {\n      const newVideo = _objectSpread({}, this.state.newVideo);\n\n      newVideo[evt.target.name] = evt.target.value;\n      this.setState({\n        newVideo\n      });\n    };\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      axios.post(\"/api/video\", this.state.newVideo).then(() => {\n        this.setState({\n          videoForm: false,\n          newVideo: {\n            name: \"\",\n            id: \"\",\n            description: \"\"\n          }\n        });\n      });\n      this.updatePage();\n    };\n  }\n\n  componentDidMount() {\n    this.updatePage();\n  }\n\n  render() {\n    let videos = this.state.plant.map(plant => {\n      return React.createElement(\"div\", {\n        className: \"plant-header \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"plant-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"plant-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, plant.name)), React.createElement(Link, {\n        to: \"/plant/\".concat(plant._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: plant.image,\n        alt: plant.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })))));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"plant-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Plants\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleToggleNewForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Add New Plant\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), this.state.plantForm ? React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"plant-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"plant-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.newPlant.name,\n      onChange: this.handleNewFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"plant-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"plant-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Description:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: this.state.newPlant.description,\n      onChange: this.handleNewFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"plant-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"plant-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Image:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"image\",\n      value: this.state.newPlant.image,\n      onChange: this.handleNewFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"plant-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"plant-disease\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Common Disease:\"), React.createElement(\"select\", {\n      name: \"disease\",\n      onChange: this.handleNewFormChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.disease.map(disease => React.createElement(\"option\", {\n      value: disease.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, disease.name)))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"add-submit\",\n      type: \"submit\",\n      value: \"Create Plant\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })) : plants);\n  }\n\n}","map":{"version":3,"sources":["/Users/bellacord/ga-sei/Project3/client/src/components/Language/Javascript/js-list-component.jsx"],"names":["axios","React","Component","Link","JavaScripts","state","videos","video","name","id","description","newVideo","videoForm","updatePage","get","then","res","setState","data","handleToggleNewForm","handleNewFormChange","evt","target","value","handleSubmit","preventDefault","post","componentDidMount","render","plant","map","_id","image","plantForm","newPlant","disease","plants"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAC/CG,KAD+C,GACvC;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,EADD;AAELC,QAAAA,EAAE,EAAE,EAFC;AAGLC,QAAAA,WAAW,EAAE;AAHR,OAFH;AAOJC,MAAAA,QAAQ,EAAE;AACRH,QAAAA,IAAI,EAAE,EADE;AAERC,QAAAA,EAAE,EAAE,EAFI;AAGRC,QAAAA,WAAW,EAAE;AAHL,OAPN;AAYJE,MAAAA,SAAS,EAAE;AAZP,KADuC;;AAAA,SAgB7CC,UAhB6C,GAgBhC,MAAM;AACjBb,MAAAA,KAAK,CAACc,GAAN,CAAU,YAAV,EAAwBC,IAAxB,CAA6BC,GAAG,IAAI;AAClC,aAAKC,QAAL,CAAc;AAAEV,UAAAA,KAAK,EAAES,GAAG,CAACE;AAAb,SAAd;AACD,OAFD;AAGAlB,MAAAA,KAAK,CAACc,GAAN,CAAU,YAAV,EAAwBC,IAAxB,CAA6BC,GAAG,IAAI;AAClC,aAAKC,QAAL,CAAc;AAAEV,UAAAA,KAAK,EAAES,GAAG,CAACE;AAAb,SAAd;AACD,OAFD;AAGD,KAvB4C;;AAAA,SA2B7CC,mBA3B6C,GA2BvB,MAAM;AAC1B,WAAKF,QAAL,CAAcZ,KAAK,IAAI;AACrB,eAAO;AAAEO,UAAAA,SAAS,EAAE,CAACP,KAAK,CAACO;AAApB,SAAP;AACD,OAFD;AAGD,KA/B4C;;AAAA,SAgC7CQ,mBAhC6C,GAgCvBC,GAAG,IAAI;AAC3B,YAAMV,QAAQ,qBAAQ,KAAKN,KAAL,CAAWM,QAAnB,CAAd;;AACAA,MAAAA,QAAQ,CAACU,GAAG,CAACC,MAAJ,CAAWd,IAAZ,CAAR,GAA4Ba,GAAG,CAACC,MAAJ,CAAWC,KAAvC;AACA,WAAKN,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACD,KApC4C;;AAAA,SAqC7Ca,YArC6C,GAqC9BH,GAAG,IAAI;AACpBA,MAAAA,GAAG,CAACI,cAAJ;AACAzB,MAAAA,KAAK,CAAC0B,IAAN,CAAW,YAAX,EAAyB,KAAKrB,KAAL,CAAWM,QAApC,EAA8CI,IAA9C,CAAmD,MAAM;AACvD,aAAKE,QAAL,CAAc;AACZL,UAAAA,SAAS,EAAE,KADC;AAEZD,UAAAA,QAAQ,EAAE;AACRH,YAAAA,IAAI,EAAE,EADE;AAERC,YAAAA,EAAE,EAAE,EAFI;AAGRC,YAAAA,WAAW,EAAE;AAHL;AAFE,SAAd;AAQD,OATD;AAUA,WAAKG,UAAL;AACD,KAlD4C;AAAA;;AAwB7Cc,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,UAAL;AACD;;AAyBHe,EAAAA,MAAM,GAAG;AAEL,QAAItB,MAAM,GAAG,KAAKD,KAAL,CAAWwB,KAAX,CAAiBC,GAAjB,CAAqBD,KAAK,IAAI;AACvC,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,KAAK,CAACrB,IAAX,CADF,CADF,EAIE,oBAAC,IAAD;AAAM,QAAA,EAAE,mBAAYqB,KAAK,CAACE,GAAlB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEF,KAAK,CAACG,KAAhB;AAAuB,QAAA,GAAG,EAAEH,KAAK,CAACrB,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF,CADF,CADF;AAcD,KAfU,CAAb;AAgBE,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKW,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMG,KAAKd,KAAL,CAAW4B,SAAX,GACC;AAAM,MAAA,QAAQ,EAAE,KAAKT,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAW6B,QAAX,CAAoB1B,IAH7B;AAIE,MAAA,QAAQ,EAAE,KAAKY,mBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAW6B,QAAX,CAAoBxB,WAH7B;AAIE,MAAA,QAAQ,EAAE,KAAKU,mBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAXF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,EAqBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAW6B,QAAX,CAAoBF,KAH7B;AAIE,MAAA,QAAQ,EAAE,KAAKZ,mBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CArBF,EA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BF,EA+BE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAE,KAAKA,mBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKf,KAAL,CAAW8B,OAAX,CAAmBL,GAAnB,CAAuBK,OAAO,IAC7B;AAAQ,MAAA,KAAK,EAAEA,OAAO,CAAC3B,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B2B,OAAO,CAAC3B,IAAtC,CADD,CADH,CAFF,CA/BF,EAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCF,EAwCE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,IAAI,EAAC,QAAnC;AAA4C,MAAA,KAAK,EAAC,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,CADD,GA4CC4B,MAlDJ,CADF;AAuDL;;AA5H8C","sourcesContent":["// all videos listed and add-to button\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport default class JavaScripts extends Component {\n    state = {\n        videos: [],\n        video: {\n          name: \"\",\n          id: \"\",\n          description: \"\"\n        },\n        newVideo: {\n          name: \"\",\n          id: \"\",\n          description: \"\",\n        },\n        videoForm: false\n      };\n    \n      updatePage = () => {\n        axios.get(\"/api/video\").then(res => {\n          this.setState({ video: res.data });\n        });\n        axios.get(\"/api/video\").then(res => {\n          this.setState({ video: res.data });\n        });\n      };\n      componentDidMount() {\n        this.updatePage();\n      }\n      handleToggleNewForm = () => {\n        this.setState(state => {\n          return { videoForm: !state.videoForm };\n        });\n      };\n      handleNewFormChange = evt => {\n        const newVideo = { ...this.state.newVideo };\n        newVideo[evt.target.name] = evt.target.value;\n        this.setState({ newVideo });\n      };\n      handleSubmit = evt => {\n        evt.preventDefault();\n        axios.post(\"/api/video\", this.state.newVideo).then(() => {\n          this.setState({\n            videoForm: false,\n            newVideo: {\n              name: \"\",\n              id: \"\",\n              description: \"\",\n            }\n          });\n        });\n        this.updatePage();\n      };\n    render() {\n        \n        let videos = this.state.plant.map(plant => {\n            return (\n              <div className=\"plant-header \">\n                <div className=\"plant-list\">\n                  <div className=\"plant-item\">\n                    <div>\n                      <h3>{plant.name}</h3>\n                    </div>\n                    <Link to={`/plant/${plant._id}`}>\n                      <img src={plant.image} alt={plant.name} />\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            );\n          });\n          return (\n            <div>\n              <h1 className=\"plant-header\">Plants</h1>\n              <div>\n                <button onClick={this.handleToggleNewForm}>Add New Plant</button>\n              </div>\n              <br />\n              {this.state.plantForm ? (\n                <form onSubmit={this.handleSubmit}>\n                  <div className=\"plant-header\">\n                    <label htmlFor=\"plant-name\">Name:</label>\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      value={this.state.newPlant.name}\n                      onChange={this.handleNewFormChange}\n                    />\n                  </div>\n                  <br />\n                  <div className=\"plant-header\">\n                    <label htmlFor=\"plant-description\">Description:</label>\n                    <input\n                      type=\"text\"\n                      name=\"description\"\n                      value={this.state.newPlant.description}\n                      onChange={this.handleNewFormChange}\n                    />\n                  </div>\n                  <br />\n                  <div className=\"plant-header\">\n                    <label htmlFor=\"plant-image\">Image:</label>\n                    <input\n                      type=\"text\"\n                      name=\"image\"\n                      value={this.state.newPlant.image}\n                      onChange={this.handleNewFormChange}\n                    />\n                  </div>\n                  <br />\n                  <div className=\"plant-header\">\n                    <label htmlFor=\"plant-disease\">Common Disease:</label>\n                    <select name=\"disease\" onChange={this.handleNewFormChange}>\n                      {this.state.disease.map(disease => (\n                        <option value={disease.name}>{disease.name}</option>\n                      ))}\n                    </select>\n                  </div>\n                  <br />\n                  <input className=\"add-submit\" type=\"submit\" value=\"Create Plant\" />\n                </form>\n              ) : (\n                plants\n              )}\n            </div>\n        )\n    }\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}